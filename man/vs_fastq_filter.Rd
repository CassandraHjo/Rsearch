% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vs_fastq_filter.R
\name{vs_fastq_filter}
\alias{vs_fastq_filter}
\title{Quality filtering sequences in FASTQ format}
\usage{
vs_fastq_filter(
  fastq_input,
  reverse = NULL,
  output_format = "fasta",
  fastq_maxee_rate = 0.01,
  fastaout = NULL,
  fastqout = NULL,
  fastaout_rev = NULL,
  fastqout_rev = NULL,
  fasta_width = 0,
  minlen = 0,
  log_file = NULL,
  threads = 1
)
}
\arguments{
\item{fastq_input}{A FASTQ file path or a FASTQ object containing (forward) reads. See Details.}

\item{reverse}{An optional FASTQ file path or a FASTQ object, if the input consists of paired sequences, containing reverse reads. If provided, it will be processed alongside \code{fastq_input}. Defaults to \code{NULL}. See Details.}

\item{output_format}{Desired output format of file or tibble: \code{"fasta"} or \code{"fastq"}. Determines the format for both forward and reverse (if provided) outputs. Defaults to \code{"fasta"}.}

\item{fastq_maxee_rate}{Threshold for average expected error. Numeric value ranging form \code{0.0} to \code{1.0}. Defaults to \code{0.01}. See Details.}

\item{fastaout}{Name of the FASTA output file for the sequences given in \code{fastq_input}. If \code{NULL} no FASTA sequences will be written to file. Defaults to \code{NULL}. See Details.}

\item{fastqout}{Name of the FASTQ output file for the sequences given in \code{fastq_input}. If \code{NULL} no FASTQ sequences will be written to file. Defaults to \code{NULL}. See Details.}

\item{fastaout_rev}{Name of the FASTA output file for the sequences given in \code{reverse}. If \code{NULL} no FASTA sequences will be written to file. Defaults to \code{NULL}. See Details.}

\item{fastqout_rev}{Name of the FASTQ output file for the sequences given in \code{reverse}. If \code{NULL} no FASTQ sequences will be written to file. Defaults to \code{NULL}. See Details.}

\item{fasta_width}{Number of characters per line in the output FASTA file. Only applies if the output file is in FASTA format. Defaults to \code{0}. See Details.}

\item{minlen}{The minimum number of bases a sequence must have to be retained. Defaults to \code{0}. See Details.}

\item{log_file}{Name of the log file to capture messages from \code{vsearch}. If \code{NULL}, no log file is created. Defaults to \code{NULL}.}

\item{threads}{Number of computational threads to be used by \code{vsearch}. Defaults to \code{1}.}
}
\value{
If output files are not specified, a tibble containing the filtered reads from \code{fastq_input} in the format specified by \code{output_format} is returned. If output files are specified, results are written to file and nothing is returned.

If \code{reverse} is specified, the resulting tibble (\code{filt_reverse}) containing the filtered reverse reads in the format specified by \code{output_format} is an attribute to the primary table (\code{filt_seqs}).
This table can be accessed by running \code{attributes(filt_seqs)$filt_reverse} or \code{attr(filt_seqs, "filt_reverse")}.

When a FASTA/FASTQ object is returned, the statistics from the filtering, \code{statistics}, is an attribute of the filtering tibble (\code{filt_seqs}).
This tibble contains filtering statistics, including number of kept and discarded sequences, and the names of the FASTQ files or objects that were filtered.
The statistics can be accessed by running \code{attributes(filt_seqs)$statistics} or \code{attr(filt_seqs, "statistics")}.
}
\description{
Filters biological sequences (DNA) based on quality in the FASTQ format.
}
\details{
The function filters sequences from the input FASTQ file or object based on the average expected error rate using \code{vsearch}.
If a \code{reverse} input is provided, it filters the reverse reads similarly. The output format is determined by \code{output_format}.

\code{fastq_input} and \code{reverse} can either be FASTQ files or FASTQ objects. FASTQ objects are tibbles that contain the columns \code{Header}, \code{Sequence}, and \code{Quality}.
\code{reverse} is an optional argument to the function. If provided, it will be processed alongside \code{fastq_input}, meaning the same \code{fastq_maxee_rate} will be used for both inputs.

If \code{fastaout} and \code{fastaout_rev} or \code{fastqout} and \code{fastqout_rev} are specified, the remaining sequences after quality filtering are output to these files in either FASTA or FASTQ format.
If unspecified (\code{NULL}), results are returned as a tibble, and no output is written to file. \code{output_format} has to match the desired output files/objects.

Sequences with an average expected error greater than the specified \code{fastq_maxee_rate} are discarded.
For a given sequence, the average expected error is the sum of error probabilities for all the positions in the sequence, divided by the length of the sequence.

FASTA files produced by \code{vsearch} are wrapped (sequences are written on lines of integer nucleotides).
\code{fasta_width} is by default set to zero to eliminate the wrapping.

Any input sequence with fewer bases than the value set in \code{minlen} will be discarded. By default, \code{minlen} is set to 0, which means that no sequences are removed.
However, using the default value may allow empty sequences to remain in the results.
}
\examples{
\dontrun{
# Read example FASTQ files
fastq_input <- file.path(file.path(path.package("Rsearch"), "extdata"), "R1_sample1_small.fq")
reverse <- file.path(file.path(path.package("Rsearch"), "extdata"), "R2_sample1_small.fq")

# Define other arguments
output_format <- "fastq"
fastq_maxee_rate <- 0.01
minlen <- 0

# Execute filtering, with tibble as output
filt_seqs <- vs_fastq_filter(fastq_input = fastq_input,
                             reverse = reverse,
                             output_format = output_format,
                             fastq_maxee_rate = fastq_maxee_rate,
                             minlen = minlen)

# Extract tibbles with filtered sequences
R1_filt <- filt_seqs
R2_filt <- attr(filt_seqs, "filt_reverse")

# Extract filtering statistics
statistics <- attr(filt_seqs, "statistics")
}

}
\references{
\url{https://github.com/torognes/vsearch}
}
